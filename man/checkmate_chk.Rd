% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helpers-checkmate.R
\name{checkmate_chk}
\alias{checkmate_chk}
\title{Wrap a \code{checkmate} check to handle its output differently}
\usage{
checkmate_chk(fun)
}
\arguments{
\item{fun}{A \code{checkmate} check, for example \code{checkmate::check_integer}.}
}
\value{
A function which runs the specified  \code{checkmate} check functions. See
'Returned Function' for details.
}
\description{
This is a closure intended for running a \code{checkmate} check and always
returning TRUE or FALSE so that it can be used in conditional statements. If
the check fails, it will optionally emit the error message returned by
checkmate.
}
\section{Returned Function}{
 The returned function runs a \code{checkmate} check.

\strong{Arguments}\cr
\describe{
\item{...}{Arguments passed on to the specified \code{checkmate}
function.}
\item{quiet}{A logical which is TRUE if a failed check should not emit its
error message; FALSE if it should.\cr Default: TRUE}
}
\strong{Value}\cr
A logical which is TRUE if the check succeeded and FALSE if not. The message
generated by a failed check is set as an attribute of the return value.
}

\examples{
# Note: chk_choice is created as follows:
# chk_choice <- checkmate_chk(checkmate::check_choice)
valid_choices <- c("pineapple", "blueberry", "peach")

# The following check succeeds:
chk_choice("peach", valid_choices)

# The following check fails and *does not* emit the error message:
chk_choice("avocado", valid_choices, quiet = TRUE)

# The following check fails and *does* emit the error message:
chk_choice("avocado", valid_choices)

# Use this check in a conditional statement:
if (!chk_choice("pineapple", valid_choices)) {
  # Do something as a result of the failure ...
  warning("Value 'pineapple' is not a valid option.")
}

\dontrun{
# An example of using this check with `cli::cli_abort`:
res <- chk_choice("tractor", valid_choices)
if (!res) {
  cli::cli_abort("{cli::cli_verbatim(attr(res, 'err_msg'))}")
}
}

}
\seealso{
\code{\link[cli:cli_abort]{cli::cli_abort()}}
}

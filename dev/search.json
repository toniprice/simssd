[{"path":"https://toniprice.github.io/simssd/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 simssd authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/approach.html","id":"the-simssd-approach","dir":"Articles","previous_headings":"","what":"The simssd approach","title":"The simssd approach","text":"[TODO: page placeholder. TBC]","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/intro.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Introduction to simssd","text":"simssd package performs sample size determination (SSD) power computation via simulation fixed effects linear regression models, including generalized linear models multilevel models.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/intro.html","id":"what-problem-does-simssd-address","dir":"Articles","previous_headings":"Overview","what":"What problem does simssd address?","title":"Introduction to simssd","text":"using simulation estimate sample size requirements multilevel models, execution time can become impracticably slow. simssd implements method improve computational speed certain circumstances. package designed extensible, offering potential support linear regression model possible simulate data fit model. comes selection predefined models box, including random effect (multilevel) models.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/intro.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Introduction to simssd","text":"basic idea, elaborated Writing effective reliable Monte Carlo simulations SimDesign package Chalmers & Adkins, order conduct Monte Carlo simulation (MCS) experiment need model together three essential components: mechanism generating (simulating) data according model; method analysing given dataset simulated data; method summarising results analysis yield (Monte Carlo) estimates quantity interest. proceed using (1) generate multiple independent datasets (usually region 10,000 ) according model. use (2) analyse datasets whichever way relevant study purpose. final step (3) compute summary results obtained (2). Typically, might interested investigating number different scenarios (sometimes called conditions), require separate MCS. example, conditions differing sample sizes.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/intro.html","id":"how-this-relates-to-sample-size-determination","dir":"Articles","previous_headings":"Background","what":"How this relates to sample size determination","title":"Introduction to simssd","text":"context SSD via simulation, analysis summary steps involve estimating power specific sample size (condition). repeat series increasing sample sizes observe power increases . words, given particular model (parameters), use approach estimate sample size corresponds required level power , turn, estimate sample size needed. , high-level sense, simssd .","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/intro.html","id":"multilevel-sample-size-determination","dir":"Articles","previous_headings":"Background","what":"Multilevel sample size determination","title":"Introduction to simssd","text":"2-level model, two sample sizes, create grid unique sample size combinations (one condition) proceed along lines, observing power curve changes. However, process described needs large number simulations multilevel models can extremely slow, often taking hours even days complete. case 2-level models one sample sizes (perhaps ) constrained, example due cost considerations, simssd can implement method reduce number simulations required, thereby reducing computation time needed. See simssd approach details.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/parameters.html","id":"choosing-parameter-values-for-your-model","dir":"Articles","previous_headings":"","what":"Choosing parameter values for your model","title":"Model parameters","text":"[TODO: page placeholder. TBC]","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/simssd.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started","text":"See installation instructions simssd README.","code":""},{"path":"https://toniprice.github.io/simssd/dev/articles/simssd.html","id":"example-usage","dir":"Articles","previous_headings":"","what":"Example usage","title":"Getting started","text":"[TODO: page placeholder. TBC]","code":""},{"path":"https://toniprice.github.io/simssd/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Toni Price. Author, maintainer.","code":""},{"path":"https://toniprice.github.io/simssd/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Price T (2025). simssd: Faster Simulation Multilevel Sample Size Determination (SSD). R package version 0.0.0.9000, https://github.com/toniprice/simssd.","code":"@Manual{,   title = {simssd: Faster Simulation for Multilevel Sample Size Determination (SSD)},   author = {Toni Price},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/toniprice/simssd}, }"},{"path":"https://toniprice.github.io/simssd/dev/index.html","id":"multilevel-sample-size-determination--at-speed","dir":"","previous_headings":"","what":"Faster Simulation for Multilevel Sample Size Determination (SSD)","title":"Faster Simulation for Multilevel Sample Size Determination (SSD)","text":"simssd R package uses simulation sample size determination (SSD), process estimating sample size needed statistical study, power computation fixed effects multilevel linear regression models. focus improving computational speed.","code":""},{"path":"https://toniprice.github.io/simssd/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Faster Simulation for Multilevel Sample Size Determination (SSD)","text":"Please note: simssd currently construction. source code documentation placeholders yet published. Installation instructions follow later date. Meanwhile, see Introduction simssd.","code":""},{"path":"https://toniprice.github.io/simssd/dev/index.html","id":"historical-context","dir":"","previous_headings":"","what":"Historical Context","title":"Faster Simulation for Multilevel Sample Size Determination (SSD)","text":"predecessor simssd developed support PhD research,   faster simulation approach sample size determination random effect models, Centre Multilevel Modelling (University Bristol). extended ideas arising MLPowSim software written William Browne Mousa Golalizadeh.","code":""},{"path":"https://toniprice.github.io/simssd/dev/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Faster Simulation for Multilevel Sample Size Determination (SSD)","text":"gratefully acknowledge funding provided PhD via UK Economic Social Research Council (ESRC) grant number ES/H044094/1. thanks late Professor Jon Rasbash getting original project ground well Professor William Browne, Professor Fiona Steele, CBE, Professor Debora Price late Professor Harvey Goldstein invaluable guidance support. MLPowSim manual William Browne, Mousa Golalizadeh Richard Parker contains number motivating examples. software design simssd draws ideas : Chalmers RP, Adkins, MC (2020). ‚ÄúWriting effective reliable Monte Carlo simulations SimDesign package.‚Äù Quantitative Methods Psychology, 16(4), 248‚Äì280. doi:10.20982/tqmp.16.4.p248. ongoing way, tools provided Hadley Wickham colleagues Posit Software, PBC (formerly RStudio, PBC) enable develop much higher quality software R otherwise able . Thank Hadley & others Posit ¬† üôÇ Last updated: 13 Jul 2024","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"closure intended running checkmate check always returning TRUE FALSE can used conditional statements. check fails, optionally emit error message returned checkmate.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"","code":"checkmate_chk(fun)"},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"fun checkmate check, example checkmate::check_integer.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"function runs specified  checkmate check functions. See 'Returned Function' details.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":"returned-function","dir":"Reference","previous_headings":"","what":"Returned Function","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"returned function runs checkmate check. Arguments ... Arguments passed specified checkmate function. quiet logical TRUE failed check emit error message; FALSE . Default: TRUE Value logical TRUE check succeeded FALSE . message generated failed check set attribute return value.","code":""},{"path":[]},{"path":"https://toniprice.github.io/simssd/dev/reference/checkmate_chk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap a checkmate check to handle its output differently ‚Äî checkmate_chk","text":"","code":"# Note: chk_choice is created as follows: # chk_choice <- checkmate_chk(checkmate::check_choice) valid_choices <- c(\"pineapple\", \"blueberry\", \"peach\")  # The following check succeeds: chk_choice(\"peach\", valid_choices)  # The following check fails and *does not* emit the error message: chk_choice(\"avocado\", valid_choices, quiet = TRUE)  # The following check fails and *does* emit the error message: chk_choice(\"avocado\", valid_choices)  # Use this check in a conditional statement: if (!chk_choice(\"pineapple\", valid_choices)) {   # Do something as a result of the failure ...   warning(\"Value 'pineapple' is not a valid option.\") }  if (FALSE) { # \\dontrun{ # An example of using this check with `cli::cli_abort`: res <- chk_choice(\"tractor\", valid_choices) if (!res) {   cli::cli_abort(\"{cli::cli_verbatim(attr(res, 'err_msg'))}\") } } # }"},{"path":"https://toniprice.github.io/simssd/dev/reference/chk_choice.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap checkmate::check_choice to handle its output differently ‚Äî chk_choice","title":"Wrap checkmate::check_choice to handle its output differently ‚Äî chk_choice","text":"wrapper always returns TRUE FALSE can used conditional statements. check fails, optionally emit error message returned checkmate.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/chk_choice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap checkmate::check_choice to handle its output differently ‚Äî chk_choice","text":"","code":"chk_choice(..., quiet = TRUE)"},{"path":"https://toniprice.github.io/simssd/dev/reference/chk_choice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap checkmate::check_choice to handle its output differently ‚Äî chk_choice","text":"... Arguments passed specified checkmate function. quiet logical TRUE failed check emit error message; FALSE . Default: TRUE","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/chk_choice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap checkmate::check_choice to handle its output differently ‚Äî chk_choice","text":"logical TRUE check succeeded FALSE . message generated failed check set attribute return value.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/glimpse_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a multiline argument for printing ‚Äî glimpse_arg","title":"Format a multiline argument for printing ‚Äî glimpse_arg","text":"Formats multiline argument printing, retaining given number lines display","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/glimpse_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a multiline argument for printing ‚Äî glimpse_arg","text":"","code":"glimpse_arg(arg, max_lines = 3L, bullet_theme = \" \")"},{"path":"https://toniprice.github.io/simssd/dev/reference/glimpse_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a multiline argument for printing ‚Äî glimpse_arg","text":"arg argument print max_lines maximum number lines output show printed argument. include, example, line column numbers/names matrix (e.g. \"[,1]  [,2]\"). bullet_theme character cli::cli_bullets theme.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/glimpse_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a multiline argument for printing ‚Äî glimpse_arg","text":"named character vector result printing argument, maximum max_lines, named value bullet_theme.","code":""},{"path":[]},{"path":"https://toniprice.github.io/simssd/dev/reference/glimpse_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a multiline argument for printing ‚Äî glimpse_arg","text":"","code":"x <- matrix(c(6.62,      4.9,     1.94,               4.9,      -3.524,  10.5,               100.94, -678.5,   -20.95), 3, 3) cli::cli_verbatim(glimpse_arg(x)) #>      [,1]   [,2]    [,3] #> [1,] 6.62  4.900  100.94 #> [2,] 4.90 -3.524 -678.50 #> and 1 more line ... # Alternatively: cli::cli_inform(cli::cat_line(glimpse_arg(x))) #>      [,1]   [,2]    [,3] #> [1,] 6.62  4.900  100.94 #> [2,] 4.90 -3.524 -678.50 #> and 1 more line ... #>"},{"path":"https://toniprice.github.io/simssd/dev/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Null coalescing operator: NULL default ‚Äî op-null-default","title":"Null coalescing operator: NULL default ‚Äî op-null-default","text":"See rlang::%||% details.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://toniprice.github.io/simssd/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator ‚Äî %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator ‚Äî %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://toniprice.github.io/simssd/dev/reference/simssd-package.html","id":null,"dir":"Reference","previous_headings":"","what":"simssd: Faster Simulation for Multilevel Sample Size Determination (SSD) ‚Äî simssd-package","title":"simssd: Faster Simulation for Multilevel Sample Size Determination (SSD) ‚Äî simssd-package","text":"Performs sample size determination (SSD) power computation via simulation fixed effects multilevel linear regression models emphasis improving computational speed.","code":""},{"path":[]},{"path":"https://toniprice.github.io/simssd/dev/reference/simssd-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"simssd: Faster Simulation for Multilevel Sample Size Determination (SSD) ‚Äî simssd-package","text":"Maintainer: Toni Price toni.price@gmail.com (ORCID)","code":""}]
